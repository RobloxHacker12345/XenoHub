local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Xeno Hub V3", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

OrionLib:MakeNotification({
    Name = "Xeno",
    Content = "extracrazy3n the scripter",
    Image = "rbxassetid://4483345998",
    Time = 3
})

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer


local WR_Tab = Window:MakeTab({
    Name = "WR",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local legitMagsEnabled = false
local maxFootballTeleportDistance = 0

WR_Tab:AddToggle({
    Name = "Legit Mags",
    Default = false,
    Callback = function(Value)
        legitMagsEnabled = Value
        print("Legit Mags Enabled:", Value)
    end
})

WR_Tab:AddSlider({
    Name = "Legit Mags Power",
    Min = 0,
    Max = 25,
    Default = 0,
    Color = Color3.fromRGB(135, 206, 250),
    Increment = 1,
    ValueName = "Distance",
    Callback = function(Value)
        maxFootballTeleportDistance = Value
        print("Legit Mags Distance:", Value)
    end
})

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local function TeleportTheFootball()
    if not legitMagsEnabled then return end
    
    local LocalPlayer = Players.LocalPlayer
    local playerRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not playerRoot then return end

    for _, football in ipairs(Workspace:GetChildren()) do
        if football:IsA("BasePart") and football.Name == "Football" then
            local distance = (football.Position - playerRoot.Position).Magnitude

            if distance <= maxFootballTeleportDistance then
                football.CFrame = CFrame.new(playerRoot.Position + Vector3.new(0, 3, 0))  
            end
        end
    end
end

RunService.Heartbeat:Connect(TeleportTheFootball)




local setFootballSizeEnabled = false
local footballSizeValue = 1  


WR_Tab:AddToggle({
    Name = "Legit Mags V2",
    Default = false,
    Callback = function(Value)
        setFootballSizeEnabled = Value
        print("Legit Mags V2 Enabled:", Value)
    end
})


WR_Tab:AddSlider({
    Name = "Legit Mags V2 Power",
    Min = 1,
    Max = 15,
    Default = 1,
    Color = Color3.fromRGB(135, 206, 250),
    Increment = 1,
    ValueName = "Distance",
    Callback = function(Value)
        footballSizeValue = Value
        print("Legit Mags V2 Distance:", Value)
    end
})

local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")


local function setFootballSize(Value)
    for _, football in ipairs(Workspace:GetChildren()) do
        if football.Name == "Football" and football:IsA("BasePart") then
            football.Size = Vector3.new(Value, Value, Value)
        end
    end
end


RunService.Heartbeat:Connect(function()
    if setFootballSizeEnabled then
        setFootballSize(footballSizeValue)
    end
end)

local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local createHitboxesEnabled = false

local function createHitboxForFootball(football)
    
    local hitbox = Instance.new("Part")
    hitbox.Name = "FootballHitbox"
    hitbox.Anchored = true
    hitbox.CanCollide = false
    hitbox.Transparency = 0.6
    hitbox.Size = football.Size
    hitbox.Position = football.Position
    hitbox.Parent = Workspace

   
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not createHitboxesEnabled then
            hitbox:Destroy()
            connection:Disconnect()
            return
        end

        if football.Parent then
            hitbox.Size = football.Size
            hitbox.Position = football.Position
        else
            hitbox:Destroy()
            connection:Disconnect()
        end
    end)
end


local function createHitboxes()
    for _, football in ipairs(Workspace:GetChildren()) do
        if football:IsA("BasePart") and football.Name == "Football" then
            createHitboxForFootball(football)
        end
    end
end


WR_Tab:AddToggle({
    Name = "Legit Mags V2 Mag Hitbox",
    Default = false,
    Callback = function(Value)
        createHitboxesEnabled = Value
        print("Legit Mags V2 Mag Hitbox Enabled:", Value)
        
        if Value then
            
            createHitboxes()
        else
            
            for _, hitbox in ipairs(Workspace:GetChildren()) do
                if hitbox:IsA("BasePart") and hitbox.Name == "FootballHitbox" then
                    hitbox:Destroy()
                end
            end
        end
    end    
})


Workspace.ChildAdded:Connect(function(child)
    if createHitboxesEnabled and child:IsA("BasePart") and child.Name == "Football" then
        createHitboxForFootball(child)
    end
end)


local DB_Tab = Window:MakeTab({
    Name = "DB",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local blatantMagsEnabled = false
local maxBlatantMagDistance = 0
local CatchRange = 10

DB_Tab:AddToggle({
    Name = "Blatant Mags",
    Default = false,
    Callback = function(Value)
        blatantMagsEnabled = Value
        print("Blatant Mags Enabled:", Value)
    end
})

DB_Tab:AddSlider({
    Name = "Blatant Mags Power",
    Min = 0,
    Max = 50,
    Default = 0,
    Color = Color3.fromRGB(135, 206, 250),
    Increment = 1,
    ValueName = "Distance",
    Callback = function(Value)
        maxBlatantMagDistance = Value
        print("Blatant Mags Distance:", Value)
    end
})

local function FootballMag()
    if not blatantMagsEnabled or maxBlatantMagDistance == 0 then return end

    local player = Players.LocalPlayer
    local playerRoot = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not playerRoot then return end

    for _, football in ipairs(Workspace:GetChildren()) do
        if football:IsA("BasePart") and football.Name == "Football" then
            local distance = (football.Position - playerRoot.Position).Magnitude
            if distance <= maxBlatantMagDistance and distance <= CatchRange then
                football.CFrame = CFrame.new(playerRoot.Position)
            end
        end
    end
end

RunService.Heartbeat:Connect(FootballMag)

local blatantMagsV2Enabled = false

DB_Tab:AddToggle({
    Name = "Blatant Mags V2",
    Default = false,
    Callback = function(Value)
        blatantMagsV2Enabled = Value
        print("Blatant Mags V2 Enabled:", Value)
    end
})

DB_Tab:AddSlider({
    Name = "Blatant Mags V2 Power",
    Min = 0,
    Max = 50,
    Default = 0,
    Color = Color3.fromRGB(135, 206, 250),
    Increment = 1,
    ValueName = "Distance",
    Callback = function(Value)
        maxBlatantMagDistance = Value
        print("Blatant Mags V2 Distance:", Value)
    end
})

local function instantTeleport()
    while true do
    if not blatantMagsV2Enabled or maxBlatantMagDistance == 0 then return end

    local player = Players.LocalPlayer
    local leftArm = player.Character and (player.Character:FindFirstChild("Left Arm") or player.Character:FindFirstChild("LeftHand"))
    local rightArm = player.Character and (player.Character:FindFirstChild("Right Arm") or player.Character:FindFirstChild("RightHand"))
    if not leftArm and rightArm then return end

    for _, football in ipairs(Workspace:GetChildren()) do
        if football:IsA("BasePart") and football.Name == "Football" then
            local distance = (football.Position - leftArm.Position).Magnitude and (football.Position - rightArm.Position).Magnitude
            if distance <= maxBlatantMagDistance then
                football.CFrame = CFrame.new(leftArm.Position)
                football.CFrame = CFrame.new(rightArm.Position)
               end
wait(0.1)
            end
        end
    end
end

RunService.Heartbeat:Connect(instantTeleport)

local QB_Tab = Window:MakeTab({
    Name = "QB",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local QBAimbotEnabled = false

QB_Tab:AddToggle({
    Name = "QB Aimbot",
    Default = false,
    Callback = function(Value)
        QBAimbotEnabled = Value
        print("QB Aimbot Enabled:", Value)
    end
})

local Rusher_Tab = Window:MakeTab({
    Name = "Rusher",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local walkSpeedEnabled = false

Rusher_Tab:AddToggle({
    Name = "WalkSpeed",
    Default = false,
    Callback = function(Value)
        walkSpeedEnabled = Value
        print("WalkSpeed Enabled:", Value)
    end
})

Rusher_Tab:AddSlider({
    Name = "WalkSpeed",
    Min = 16,
    Max = 50,
    Default = 20,
    Color = Color3.fromRGB(135, 206, 250),
    Increment = 1,
    ValueName = "Speed",
    Callback = function(Value)
        if walkSpeedEnabled then
            local player = Players.LocalPlayer
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.WalkSpeed = Value
            end
        end
    end
})

local jumpPowerEnabled = false

Rusher_Tab:AddToggle({
    Name = "JumpPower",
    Default = false,
    Callback = function(Value)
        jumpPowerEnabled = Value
        print("JumpPower Enabled:", Value)
    end
})

Rusher_Tab:AddSlider({
    Name = "JumpPower",
    Min = 50,
    Max = 250,
    Default = 50,
    Color = Color3.fromRGB(135, 206, 250),
    Increment = 1,
    ValueName = "Power",
    Callback = function(Value)
        if jumpPowerEnabled then
            local Player = Players.LocalPlayer
            local Character = Player.Character
            if Character and Character:FindFirstChild("Humanoid") then
                Character.Humanoid.JumpPower = Value
            end
        end
    end
})

Rusher_Tab:AddBind({
    Name = "Ball Carrier Lock",
    Default = Enum.KeyCode.L,
    Hold = false,
    Callback = function()
        print("Ball Carrier Lock Enabled")
    end
})

local teleportRange = 5

local function TeleportForward()
    local player = Players.LocalPlayer
    local character = player.Character
    if not character then return end

    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end

    local teleportDirection = rootPart.CFrame.LookVector
    local teleportPosition = rootPart.Position + (teleportDirection * teleportRange)

    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {character}
    local raycastResult = Workspace:Raycast(rootPart.Position, teleportDirection * teleportRange, raycastParams)

    if raycastResult then
        teleportPosition = raycastResult.Position
    end

    rootPart.CFrame = CFrame.new(teleportPosition)
end

Rusher_Tab:AddBind({
    Name = "QuickTP",
    Default = Enum.KeyCode.F,
    Hold = false,
    Callback = function()
        TeleportForward()
    end
})

local Extra_Tab = Window:MakeTab({
    Name = "Extra Stuff",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local pullVectorDistance = 0
local pullVectorConnection

local function findNearestFootball()
    local nearestFootball = nil
    local minDistance = pullVectorDistance + 1

    for _, football in ipairs(Workspace:GetChildren()) do
        if football:IsA("BasePart") and football.Name == "Football" then
            local distance = (football.Position - Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance <= pullVectorDistance and distance < minDistance then
                minDistance = distance
                nearestFootball = football
            end
        end
    end

    return nearestFootball
end

local function teleportToFootball()
    if pullVectorDistance == 0 then return end
    local nearestFootball = findNearestFootball()

    if nearestFootball then
        Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(nearestFootball.Position))
    end
end

Extra_Tab:AddSlider({
    Name = "Pullvector",
    Min = 0,
    Max = 20,
    Default = 0,
    Color = Color3.fromRGB(135, 206, 250),
    Increment = 1,
    ValueName = "Distance",
    Callback = function(Value)
        pullVectorDistance = Value
        if pullVectorConnection then
            pullVectorConnection:Disconnect()
        end
        if pullVectorDistance > 0 then
            pullVectorConnection = RunService.Heartbeat:Connect(teleportToFootball)
        end
        print("Pullvector Distance:", Value)
    end
})

local armSize = 1

Extra_Tab:AddSlider({
    Name = "Increased Arm Size",
    Min = 1,
    Max = 10,
    Default = 1,
    Color = Color3.fromRGB(135, 206, 250),
    Increment = 1,
    ValueName = "Size",
    Callback = function(Value)
        armSize = Value
        print("Increased Arm Size:", Value)

        local player = Players.LocalPlayer
        local character = player.Character
        if character then
            local leftArm = character:FindFirstChild("Left Arm") or character:FindFirstChild("LeftHand")
            local rightArm = character:FindFirstChild("Right Arm") or character:FindFirstChild("RightHand")
            if leftArm then
                leftArm.Size = Vector3.new(leftArm.Size.X, armSize, armSize)
                leftArm.Massless = true
            end
            if rightArm then
                rightArm.Size = Vector3.new(rightArm.Size.X, armSize, armSize)
                rightArm.Massless = true
            end
        end
    end
})

local armTransparency = 0

Extra_Tab:AddSlider({
    Name = "Arm Transparency",
    Min = 0,
    Max = 1,
    Default = 0,
    Color = Color3.fromRGB(135, 206, 250),
    Increment = 0.1,
    ValueName = "Transparency",
    Callback = function(Value)
        armTransparency = Value
        print("Arm Transparency:", Value)

        local player = Players.LocalPlayer
        local character = player.Character
        if character then
            local leftArm = character:FindFirstChild("Left Arm") or character:FindFirstChild("LeftHand")
            local rightArm = character:FindFirstChild("Right Arm") or character:FindFirstChild("RightHand")
            if leftArm then
                for _, part in pairs(leftArm:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.Transparency = armTransparency
                    end
                end
            end
            if rightArm then
                for _, part in pairs(rightArm:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.Transparency = armTransparency

                        RunService.Heartbeat:Connect(armTransparency)
                        wait(0.1)
                    end
                end
            end
        end
    end
})

local player = game.Players.LocalPlayer
local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")

local sliderEnabled = false 


local function updateHipHeight(value)
    if humanoid and sliderEnabled then
        humanoid.HipHeight = value
    end
end


Extra_Tab:AddToggle({
    Name = "HipHeight",
    Default = false,
    Callback = function(state)
        sliderEnabled = state
        print("HipHeight adjustment enabled: " .. tostring(state))
    end
})


Extra_Tab:AddSlider({
    Name = "HipHeight",
    Min = 0,
    Max = 10.0,
    Default = 1,
    Color = Color3.fromRGB(135, 206, 250),
    Increment = 1,
    ValueName = "Height",
    Callback = function(value)
        updateHipHeight(value)
        print("HipHeight set to: " .. value)
    end    
})




local AJe = false

local function EAJ(c)
    local t = c:FindFirstChild("Torso")
    local h = c:FindFirstChild("Head")

    if t and h then
        t.CanCollide = not AJe
        h.CanCollide = not AJe
    end
end

local function onCharacterAdded(plr)
    plr.CharacterAdded:Connect(function(c)
        EAJ(c)
    end)
end


local function enableAntiJam()
    for _, plr in ipairs(game:GetService("Players"):GetPlayers()) do
        if plr.Character then
            EAJ(plr.Character)
        end
    end
end


for _, plr in ipairs(game:GetService("Players"):GetPlayers()) do
    onCharacterAdded(plr)
end


game:GetService("Players").PlayerAdded:Connect(onCharacterAdded)




Extra_Tab:AddToggle({
    Name = "Anti Jam",
    Default = false,
    Callback = function(Value)
        AJe = Value
        enableAntiJam()
    end
})


enableAntiJam()




local tackleReachDistance = 250

Rusher_Tab:AddSlider({
    Name = "Tackle Reach",
    Min = 1,
    Max = 50,
    Default = 1,
    Color = Color3.fromRGB(135, 206, 250),
    Increment = 1,
    ValueName = "Distance",
    Callback = function(Value)
        tackleReachDistance = Value
        print("Tackle Reach Distance:", Value)
        _G.reach = tackleReachDistance
    end
})

local function resizeHumanoidRootPart(hrp, newSize)
    hrp.Size = Vector3.new(newSize.X, hrp.Size.Y, newSize.Z)
end

RunService.Stepped:Connect(function()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

        humanoidRootPart.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5, 0.3, 0.5)

        local newSize = Vector3.new(_G.reach, humanoidRootPart.Size.Y, _G.reach)
        if humanoidRootPart.Size == newSize then
            resizeHumanoidRootPart(humanoidRootPart, newSize)
        end
    end
end)

local League_Tab = Window:MakeTab({
    Name = "LFG Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Section = League_Tab:AddSection({
	Name = "League Mags V2"
})


local hitboxSize = Vector3.new(5, 5, 5)
local hitboxResizeEnabled = false

League_Tab:AddToggle({
    Name = "LFGV2",
    Default = false,
    Callback = function(Value)
        hitboxResizeEnabled = Value
        print("LFGV2 Toggle Enabled:", Value)
    end
})

League_Tab:AddSlider({
    Name = "LFGMagsV2",
    Min = 1,
    Max = 100,
    Default = 1,
    Color = Color3.fromRGB(	135, 206, 250),
    Increment = 1,
    ValueName = "Size",
    Callback = function(Value)
        hitboxSize = Vector3.new(Value, Value, Value)
        if hitboxResizeEnabled then
            resizeHitbox(hitboxSize)
        end
        print("Hitbox Size:", hitboxSize)
    end
})

local function resizeHitbox(newSize)
    local character = LocalPlayer.Character
    if character then
        local hitbox = character:FindFirstChild("Hitbox")
        if hitbox and hitbox:IsA("BasePart") then
            hitbox.Size = newSize
            hitbox.Massless = true
        end
    end
end

local function resizeHitboxLoop()
    while true do
        if hitboxResizeEnabled then
            resizeHitbox(hitboxSize)
        end
        wait(0.1)
    end
end

spawn(resizeHitboxLoop)


local Config_Tab = Window:MakeTab({
	Name = "Configs",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Section = Config_Tab:AddSection({
	Name = "Jerrick's Config"
})


Config_Tab:AddToggle({
    Name = "BigDaddyJerrick Config",
    Default = false,
    Callback = function(Value)
        if Value then
            pullVectorDistance = 7.5
            pullVectorConnection = RunService.Heartbeat:Connect(teleportToFootball)
            
            
            local Player = Players.LocalPlayer
            local Character = Player.Character
            if Character and Character:FindFirstChild("Humanoid") then
                Character.Humanoid.JumpPower = 60
            end
        else
            pullVectorDistance = 0
            if pullVectorConnection then
                pullVectorConnection:Disconnect()
                pullVectorConnection = nil
            end

           
            local Player = Players.LocalPlayer
            local Character = Player.Character
            if Character and Character:FindFirstChild("Humanoid") then
                Character.Humanoid.JumpPower = 50
            end
        end
    end

})

Extra_Tab:AddToggle({
    Name = "No Jump Cooldown",
    Default = false,
    Callback = function(Value)

        print("No Jump Cooldown Enabled:", Value)
    end
})

local Section = Config_Tab:AddSection({
	Name = "For D1 Players"
})




Config_Tab:AddToggle({
    Name = "LFGMain Config",
    Default = false,
    Callback = function(Value)
        print("LFG Config Enabled")
    end
})     

local mags = Instance.new("Part")
mags.Name = "Mags"
mags.Anchored = true
mags.CanCollide = false
mags.Transparency = 0.65

local t = game.Workspace:FindFirstChild("Torso")

if t then
    mags.Size = t.Size
    mags.Position = t.Position
    mags.Parent = game.Workspace  

    while true do

    

        

        wait(0.1)
    end
end






Config_Tab:AddToggle({
    Name = "Blatant Config",
    Default = false,
    Callback = function(Value)
    print("Blatant Config Enabled")
    end
})    

local Section = Config_Tab:AddSection({
	Name = "Fat Ahh"
})


Config_Tab:AddToggle({
    Name = "XXL Config",
    Default = false,
    Callback = function(Value)
    print("XXL Config Enabled")
    end
})    

local Mobile_Tab = Window:MakeTab({
	Name = "Mobile Support",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})


local maxFootballTeleportDistance = 12
local legitMagEnabled = false

Mobile_Tab:AddToggle({
    Name = "Legit Magnets",
    Default = false,
    Callback = function(Value)
        legitMagEnabled = Value
        print("Legit Magnets Enabled:", Value)
    end
})

local function TeleportTheFootball()
    if not legitMagEnabled then return end
    
    local LocalPlayer = Players.LocalPlayer
    local playerRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not playerRoot then return end

    for _, football in ipairs(Workspace:GetChildren()) do
        if football:IsA("BasePart") and football.Name == "Football" then
            local distance = (football.Position - playerRoot.Position).Magnitude

            if distance <= maxFootballTeleportDistance then
                football.CFrame = CFrame.new(playerRoot.Position + Vector3.new(0, 3, 0))  
            end
        end
    end
end

RunService.Heartbeat:Connect(TeleportTheFootball)

Mobile_Tab:AddToggle({
    Name = "Legit Mags V2",
    Default = false,
    Callback = function(Value)
        legitMagEnabled = Value
        print("Legit Mags V2 Enabled:", Value)
    end
})



local FootballMagEnabled = false
local MaxTeleportDistance = 10
local CatchRange = 10

Mobile_Tab:AddToggle({
    Name = "Blatant Magnets",
    Default = false,
    Callback = function(Value)
        FootballMagEnabled = Value
        print("Blatant Magnets Enabled:", Value)
    end
})

local function FootballMag()
    if not FootballMagEnabled then return end
    
    local LocalPlayer = Players.LocalPlayer
    local catchLeft = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not catchLeft then return end
    
    local targetPositionLeft = catchLeft.Position

    for _, football in ipairs(Workspace:GetChildren()) do
        if football:IsA("BasePart") and football.Name == "Football" then
            local distanceLeft = (football.Position - targetPositionLeft).Magnitude

            if distanceLeft <= MaxTeleportDistance then
                if distanceLeft <= CatchRange then
                    football.CFrame = CFrame.new(targetPositionLeft)
                end
            end
        end
    end
end

RunService.Heartbeat:Connect(FootballMag)

Mobile_Tab:AddToggle({
    Name = "Blatant Mags V2",
    Default = false,
    Callback = function(Value)
        FootballMagEnabled = Value
        print("Blatant Mags V2 Enabled:", Value)
    end
})


Mobile_Tab:AddToggle({
    Name = "Ball Carrier Lock",
    Default = Enum.KeyCode.L,
    Default = false,
    Hold = false,
    Callback = function()
        print("Ball Carrier Lock Enabled")
    end
})

local teleportRange = 5

local function TeleportForward()
    local Player = Players.LocalPlayer
    local character = Player.Character
    if not character then return end

    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end

    local teleportDirection = rootPart.CFrame.LookVector
    local teleportPosition = rootPart.Position + (teleportDirection * teleportRange)

    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {Player.Character}
    local raycastResult = Workspace:Raycast(rootPart.Position, teleportDirection * teleportRange, raycastParams)
    if raycastResult then
        teleportPosition = raycastResult.Position
    end

    rootPart.CFrame = CFrame.new(teleportPosition)
end

Mobile_Tab:AddToggle({
    Name = "QuickTP",
    Default = Enum.KeyCode.F,
    Default = false,
    Hold = false,
    Callback = function()
        TeleportForward()
    end
})



local pullVectorEnabled = false
local pullVectorConnection

local function findNearestFootball()
    local TeleportDistance = 7
    local nearestFootball = nil
    local minDistance = TeleportDistance + 1

    for _, football in ipairs(Workspace:GetChildren()) do
        if football.Name == "Football" and football:IsA("BasePart") then
            local distance = (football.Position - Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance <= TeleportDistance and distance < minDistance then
                minDistance = distance
                nearestFootball = football
            end
        end
    end

    return nearestFootball
end

local function teleportToFootball()
    if not pullVectorEnabled then return end
    local nearestFootball = findNearestFootball()

    if nearestFootball then
        Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(nearestFootball.Position))
    end
end

Mobile_Tab:AddToggle({
    Name = "Pullvector",
    Default = false,
    Callback = function(Value)
        pullVectorEnabled = Value
        if pullVectorEnabled then
            pullVectorConnection = RunService.Heartbeat:Connect(teleportToFootball)
        else
            if pullVectorConnection then
                pullVectorConnection:Disconnect()
                pullVectorConnection = nil
            end
        end
        print("Pullvector Enabled:", Value)
    end
})

Mobile_Tab:AddToggle({
    Name = "Bigger Hands",
    Default = false,
    Callback = function(Value)
        print("Bigger Hands Enabled:", Value)
    end
})

local customMagsEnabled = false

local function getRandomPositionAround(part, minRadius, maxRadius)
    local randomDirection = Vector3.new(math.random() - 0.5, math.random() - 0.5, math.random() - 0.5).Unit
    local randomDistance = minRadius + math.random() * (maxRadius - minRadius)
    return part.Position + randomDirection * randomDistance
end

local function instantTeleport()
    if not customMagsEnabled then return end

    local TeleportDistance = 35
    local MinRadius = 1  
    local MaxRadius = 5  

    local player = Players.LocalPlayer
    local leftArm = player.Character and player.Character:FindFirstChild("Left Arm")
    local rightArm = player.Character and player.Character:FindFirstChild("Right Arm")

    if not leftArm then return end

    for _, football in ipairs(Workspace:GetChildren()) do
        if football.Name == "Football" and football:IsA("BasePart") then
            local distance = (football.Position - leftArm.Position).firetouchinterest and (football.Position - rightArm.Position).firetouchinterest
            if distance <= TeleportDistance then
                local randomPosition = getRandomPositionAround(leftArm, MinRadius, MaxRadius) 
                football.CFrame = CFrame.new(randomPosition)
            end
        end
    end
end

RunService.Heartbeat:Connect(instantTeleport)

Mobile_Tab:AddToggle({
    Name = "Custom Mags",
    Default = false,
    Callback = function(Value)
        customMagsEnabled = Value
        print("Custom Mags Enabled:", Value)
    end
})

Mobile_Tab:AddToggle({
    Name = "Tackle Reach",
    Default = false,
    Callback = function(Value)
        print("Tackle Reach Enabled:", Value)
    end
})



Mobile_Tab:AddToggle({
    Name = "Block Reach",
    Default = false,
    Callback = function(Value)
        print("Block Reach Enabled:", Value)
    end
})

local Other_Tab = Window:MakeTab({
	Name = "Other",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local buttonEnabled = false

Other_Tab:AddButton({
    Name = "Anti Lag",
    Callback = function()
        buttonEnabled = not buttonEnabled
        print("Button Clicked! Current State:", buttonEnabled)
        
        local decalsyeeted = true 
local g = game
local w = g.Workspace
local l = g.Lighting
local t = w.Terrain
t.WaterWaveSize = 0
t.WaterWaveSpeed = 0
t.WaterReflectance = 0
t.WaterTransparency = 0
l.GlobalShadows = false
l.FogEnd = 9e9
l.Brightness = 0
settings().Rendering.QualityLevel = "Level02"
for i, v in pairs(g:GetDescendants()) do
    if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
    elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
        v.Transparency = 1
    elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
        v.Lifetime = NumberRange.new(0)
    elseif v:IsA("Explosion") then
        v.BlastPressure = 1
        v.BlastRadius = 1
    elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") then
        v.Enabled = false
    elseif v:IsA("MeshPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
        v.TextureID = 10385902758728957
    end
end
for i, e in pairs(l:GetChildren()) do
    if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
        e.Enabled = false
    end
end

    end


})

local be = false

Other_Tab:AddButton({
    Name = "No Blue Line Barrier",
    Callback = function()
        be = not be
        print("Blue Line Barrier Removed", be)
        
    end
})


local plr = game.Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local l2 = game.Workspace.Line2

l2.Name = "Line2"

l2:Destroy()



local function rj()

    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,  game.JobId, Players.LocalPlayer)
    
end

Other_Tab:AddButton({
    Name = "Rejoin",
    Callback = function()
        print("Rejoined The Game")
        rj()
    end
})

Other_Tab:AddButton({
    Name = "No OOB",
    Default = false,
    Callback = function(Value)
     print("click it 3 times if your reading this", Value)
    end
})

    local plr = game.Players.LocalPlayer
    local Workspace = game:GetService("Workspace")
    local outofbounds = game.Workspace.OOB_Line

     if outofbounds then
        outofbounds.Name = "OOB_Line"  
        outofbounds:Destroy()
    end

    


OrionLib:Init()

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Xeno Hub V3", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

OrionLib:MakeNotification({
    Name = "Xeno",
    Content = "extracrazy3n the scripter",
    Image = "rbxassetid://4483345998",
    Time = 3
})

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local WR_Tab = Window:MakeTab({
    Name = "WR",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local legitMagsEnabled = false
local maxFootballTeleportDistance = 0

WR_Tab:AddToggle({
    Name = "Legit Mags",
    Default = false,
    Callback = function(Value)
        legitMagsEnabled = Value
        print("Legit Mags Enabled:", Value)
    end
})

WR_Tab:AddSlider({
    Name = "Legit Mags Power",
    Min = 0,
    Max = 25,
    Default = 0,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Distance",
    Callback = function(Value)
        maxFootballTeleportDistance = Value
        print("Legit Mags Distance:", Value)
    end
})

local legitMagsV2Enabled = false

WR_Tab:AddToggle({
    Name = "Legit Mags V2",
    Default = false,
    Callback = function(Value)
        legitMagsV2Enabled = Value
        print("Legit Mags V2 Enabled:", Value)
    end
})

WR_Tab:AddSlider({
    Name = "Legit Mags V2 Power",
    Min = 0,
    Max = 25,
    Default = 0,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Distance",
    Callback = function(Value)
        print("Legit Mags V2 Distance:", Value)
    end
})

local function TeleportTheFootball()
    if not legitMagsEnabled or maxFootballTeleportDistance == 0 then return end

    local player = Players.LocalPlayer
    local playerRoot = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not playerRoot then return end

    for _, football in ipairs(Workspace:GetChildren()) do
        if football:IsA("BasePart") and football.Name == "Football" then
            local distance = (football.Position - playerRoot.Position).Magnitude
            if distance <= maxFootballTeleportDistance then
                football.CFrame = CFrame.new(playerRoot.Position + Vector3.new(0, 3, 0))
            end
        end
    end
end

RunService.Heartbeat:Connect(TeleportTheFootball)

local DB_Tab = Window:MakeTab({
    Name = "DB",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local blatantMagsEnabled = false
local maxBlatantMagDistance = 0
local CatchRange = 10

DB_Tab:AddToggle({
    Name = "Blatant Mags",
    Default = false,
    Callback = function(Value)
        blatantMagsEnabled = Value
        print("Blatant Mags Enabled:", Value)
    end
})

DB_Tab:AddSlider({
    Name = "Blatant Mags Power",
    Min = 0,
    Max = 50,
    Default = 0,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Distance",
    Callback = function(Value)
        maxBlatantMagDistance = Value
        print("Blatant Mags Distance:", Value)
    end
})

local function FootballMag()
    if not blatantMagsEnabled or maxBlatantMagDistance == 0 then return end

    local player = Players.LocalPlayer
    local playerRoot = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not playerRoot then return end

    for _, football in ipairs(Workspace:GetChildren()) do
        if football:IsA("BasePart") and football.Name == "Football" then
            local distance = (football.Position - playerRoot.Position).Magnitude
            if distance <= maxBlatantMagDistance and distance <= CatchRange then
                football.CFrame = CFrame.new(playerRoot.Position)
            end
        end
    end
end

RunService.Heartbeat:Connect(FootballMag)

local blatantMagsV2Enabled = false

DB_Tab:AddToggle({
    Name = "Blatant Mags V2",
    Default = false,
    Callback = function(Value)
        blatantMagsV2Enabled = Value
        print("Blatant Mags V2 Enabled:", Value)
    end
})

DB_Tab:AddSlider({
    Name = "Blatant Mags V2 Power",
    Min = 0,
    Max = 50,
    Default = 0,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Distance",
    Callback = function(Value)
        maxBlatantMagDistance = Value
        print("Blatant Mags V2 Distance:", Value)
    end
})

local function instantTeleport()
    if not blatantMagsV2Enabled or maxBlatantMagDistance == 0 then return end

    local player = Players.LocalPlayer
    local leftArm = player.Character and (player.Character:FindFirstChild("Left Arm") or player.Character:FindFirstChild("LeftHand"))

    if not leftArm then return end

    for _, football in ipairs(Workspace:GetChildren()) do
        if football:IsA("BasePart") and football.Name == "Football" then
            local distance = (football.Position - leftArm.Position).Magnitude
            if distance <= maxBlatantMagDistance then
                football.CFrame = CFrame.new(leftArm.Position)
            end
        end
    end
end

RunService.Heartbeat:Connect(instantTeleport)

local QB_Tab = Window:MakeTab({
    Name = "QB",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local QBAimbotEnabled = false

QB_Tab:AddToggle({
    Name = "QB Aimbot",
    Default = false,
    Callback = function(Value)
        QBAimbotEnabled = Value
        print("QB Aimbot Enabled:", Value)
    end
})

local Rusher_Tab = Window:MakeTab({
    Name = "Rusher",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local walkSpeedEnabled = false

Rusher_Tab:AddToggle({
    Name = "WalkSpeed",
    Default = false,
    Callback = function(Value)
        walkSpeedEnabled = Value
        print("WalkSpeed Enabled:", Value)
    end
})

Rusher_Tab:AddSlider({
    Name = "WalkSpeed",
    Min = 16,
    Max = 50,
    Default = 20,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Speed",
    Callback = function(Value)
        if walkSpeedEnabled then
            local player = Players.LocalPlayer
            local character = player.Character
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.WalkSpeed = Value
            end
        end
    end
})

local jumpPowerEnabled = false

Rusher_Tab:AddToggle({
    Name = "JumpPower",
    Default = false,
    Callback = function(Value)
        jumpPowerEnabled = Value
        print("JumpPower Enabled:", Value)
    end
})

Rusher_Tab:AddSlider({
    Name = "JumpPower",
    Min = 50,
    Max = 250,
    Default = 50,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Power",
    Callback = function(Value)
        if jumpPowerEnabled then
            local Player = Players.LocalPlayer
            local Character = Player.Character
            if Character and Character:FindFirstChild("Humanoid") then
                Character.Humanoid.JumpPower = Value
            end
        end
    end
})

Rusher_Tab:AddBind({
    Name = "Ball Carrier Lock",
    Default = Enum.KeyCode.L,
    Hold = false,
    Callback = function()
        print("Ball Carrier Lock Enabled")
    end
})

local teleportRange = 5

local function TeleportForward()
    local player = Players.LocalPlayer
    local character = player.Character
    if not character then return end

    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end

    local teleportDirection = rootPart.CFrame.LookVector
    local teleportPosition = rootPart.Position + (teleportDirection * teleportRange)

    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {character}
    local raycastResult = Workspace:Raycast(rootPart.Position, teleportDirection * teleportRange, raycastParams)

    if raycastResult then
        teleportPosition = raycastResult.Position
    end

    rootPart.CFrame = CFrame.new(teleportPosition)
end

Rusher_Tab:AddBind({
    Name = "QuickTP",
    Default = Enum.KeyCode.F,
    Hold = false,
    Callback = function()
        TeleportForward()
    end
})

local Extra_Tab = Window:MakeTab({
    Name = "Extra Stuff",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local pullVectorDistance = 0
local pullVectorConnection

local function findNearestFootball()
    local nearestFootball = nil
    local minDistance = pullVectorDistance + 1

    for _, football in ipairs(Workspace:GetChildren()) do
        if football:IsA("BasePart") and football.Name == "Football" then
            local distance = (football.Position - Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance <= pullVectorDistance and distance < minDistance then
                minDistance = distance
                nearestFootball = football
            end
        end
    end

    return nearestFootball
end

local function teleportToFootball()
    if pullVectorDistance == 0 then return end
    local nearestFootball = findNearestFootball()

    if nearestFootball then
        Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(nearestFootball.Position))
    end
end

Extra_Tab:AddSlider({
    Name = "Pullvector",
    Min = 0,
    Max = 20,
    Default = 0,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Distance",
    Callback = function(Value)
        pullVectorDistance = Value
        if pullVectorConnection then
            pullVectorConnection:Disconnect()
        end
        if pullVectorDistance > 0 then
            pullVectorConnection = RunService.Heartbeat:Connect(teleportToFootball)
        end
        print("Pullvector Distance:", Value)
    end
})

local armSize = 1

Extra_Tab:AddSlider({
    Name = "Increased Arm Size",
    Min = 1,
    Max = 10,
    Default = 1,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Size",
    Callback = function(Value)
        armSize = Value
        print("Increased Arm Size:", Value)

        local player = Players.LocalPlayer
        local character = player.Character
        if character then
            local leftArm = character:FindFirstChild("Left Arm") or character:FindFirstChild("LeftHand")
            local rightArm = character:FindFirstChild("Right Arm") or character:FindFirstChild("RightHand")
            if leftArm then
                leftArm.Size = Vector3.new(leftArm.Size.X, armSize, armSize)
                leftArm.Massless = true
            end
            if rightArm then
                rightArm.Size = Vector3.new(rightArm.Size.X, armSize, armSize)
                rightArm.Massless = true
            end
        end
    end
})

local armTransparency = 0

Extra_Tab:AddSlider({
    Name = "Arm Transparency",
    Min = 0,
    Max = 1,
    Default = 0,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 0.1,
    ValueName = "Transparency",
    Callback = function(Value)
        armTransparency = Value
        print("Arm Transparency:", Value)

        local player = Players.LocalPlayer
        local character = player.Character
        if character then
            local leftArm = character:FindFirstChild("Left Arm") or character:FindFirstChild("LeftHand")
            local rightArm = character:FindFirstChild("Right Arm") or character:FindFirstChild("RightHand")
            if leftArm then
                for _, part in pairs(leftArm:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.Transparency = armTransparency
                    end
                end
            end
            if rightArm then
                for _, part in pairs(rightArm:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.Transparency = armTransparency
                    end
                end
            end
        end
    end
})

Extra_Tab:AddToggle({
    Name = "Anti Jam",
    Default = false,
    Callback = function(Value)
        print("Anti Jam Enabled:", Value)
    end
})

local tackleReachDistance = 250

Rusher_Tab:AddSlider({
    Name = "Tackle Reach",
    Min = 1,
    Max = 50,
    Default = 1,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Distance",
    Callback = function(Value)
        tackleReachDistance = Value
        print("Tackle Reach Distance:", Value)
        _G.reach = tackleReachDistance
    end
})

local function resizeHumanoidRootPart(hrp, newSize)
    hrp.Size = Vector3.new(newSize.X, hrp.Size.Y, newSize.Z)
end

RunService.Stepped:Connect(function()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

        humanoidRootPart.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5, 0.3, 0.5)

        local newSize = Vector3.new(_G.reach, humanoidRootPart.Size.Y, _G.reach)
        if humanoidRootPart.Size ~= newSize then
            resizeHumanoidRootPart(humanoidRootPart, newSize)
        end
    end
end)

local League_Tab = Window:MakeTab({
    Name = "LFG Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local hitboxSize = Vector3.new(5, 5, 5)
local hitboxResizeEnabled = false

League_Tab:AddToggle({
    Name = "LeagueMagsV2",
    Default = false,
    Callback = function(Value)
        hitboxResizeEnabled = Value
        print("LeagueMagsV2 Toggle Enabled:", Value)
    end
})

League_Tab:AddSlider({
    Name = "LeagueMagsV2",
    Min = 1,
    Max = 100,
    Default = 5,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Size",
    Callback = function(Value)
        hitboxSize = Vector3.new(Value, Value, Value)
        if hitboxResizeEnabled then
            resizeHitbox(hitboxSize)
        end
        print("Hitbox Size:", hitboxSize)
    end
})

local function resizeHitbox(newSize)
    local character = LocalPlayer.Character
    if character then
        local hitbox = character:FindFirstChild("Hitbox")
        if hitbox and hitbox:IsA("BasePart") then
            hitbox.Size = newSize
            hitbox.Massless = true
        end
    end
end

local function resizeHitboxLoop()
    while true do
        if hitboxResizeEnabled then
            resizeHitbox(hitboxSize)
        end
        wait(0.1)
    end
end

spawn(resizeHitboxLoop)

OrionLib:Init()
